/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import licenciasmunicipales.ListaEnlazada;
import licenciasmunicipales.Nodo;




/**
 *
 * @author PC_TONY
 */
public class RegistroForm extends javax.swing.JFrame {
    
    private String[][] datos; 
    private int numFilas; 
    private int numColumnas; 
    private ListaEnlazada listaEnlazada = new ListaEnlazada();
    
    public RegistroForm() {
        initComponents();
        
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImportar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtActividad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtArea = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        txtTipo = new javax.swing.JTextField();
        btnExportar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnImportar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnImportar.setText("Importar");
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });
        getContentPane().add(btnImportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 100, 40));

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 220, 100, 40));

        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaDatos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 880, 340));

        btnAgregar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 60, 100, 40));

        jLabel1.setText("Ruc:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, -1, -1));
        getContentPane().add(txtRuc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 100, -1));

        jLabel2.setText("Actividad: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, -1));
        getContentPane().add(txtActividad, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 110, -1));

        jLabel3.setText("Area: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, -1));
        getContentPane().add(txtArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 120, -1));

        jLabel4.setText("Tipo de lincencia:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, -1, -1));

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LICENCIA DE FUNCIONAMIENTO DEFINITIVA", "LICENCIA DE FUNCIONAMIENTO TEMPORAL", "LICENCIA DE FUNCIONAMIENTO CONSECIONARIA" }));
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 310, -1));
        getContentPane().add(txtTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 310, -1));

        btnExportar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 90, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Registro de Licencias ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 380, 30));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/FONDITO.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
         String seleccionado = (String) cmbTipo.getSelectedItem();
         txtTipo.setText(seleccionado);
    }//GEN-LAST:event_cmbTipoActionPerformed

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccionar archivo CSV");
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                cargarDatosDesdeCSV(file);
                mostrarDatosEnTabla();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al leer el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnImportarActionPerformed

    private void cargarDatosDesdeCSV(File file) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader(file));
    String linea;
    boolean primeraLinea = true;

    while ((linea = br.readLine()) != null) {
        // Dividir la línea por comas
        String[] fila = linea.split(",");
        
        if (primeraLinea) {
            // Ignorar la primera línea si es el encabezado
            primeraLinea = false;
            continue;
        }
        // Agrega la fila a la lista enlazada
        listaEnlazada.agregar(fila);
    }
    br.close();
    // Actualizar la tabla después de cargar los datos
    actualizarTabla();
}
    private void mostrarDatosEnTabla() {
        
    DefaultTableModel modelo = new DefaultTableModel(new String[] {"RUC", "Actividad", "Área", "Tipo de Licencia"}, 0);
    tablaDatos.setModel(modelo);    
    // Limpiar los datos existentes en la tabla antes de mostrar los nuevos
    modelo.setRowCount(0);

    // Recorremos la lista enlazada y mostramos sus datos en la tabla
    Nodo actual = listaEnlazada.getCabeza();
    while (actual != null) {
        String[] datos = actual.getDatos();
        modelo.addRow(datos); // Agregar los datos a la tabla
        actual = actual.getSiguiente(); // Avanzar al siguiente nodo
    }

    // Refrescar la vista de la tabla
    tablaDatos.revalidate();
    tablaDatos.repaint();
    
    
}
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // Obtener los datos 
    String ruc = txtRuc.getText();
    String actividad = txtActividad.getText();
    String area = txtArea.getText();
    String tipo = (String) cmbTipo.getSelectedItem(); // Obtener el valor seleccionado

    // Validar que los campos no estén vacíos
    if (ruc.isEmpty() || actividad.isEmpty() || area.isEmpty() || tipo == null) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }
    String[] nuevaFila = {ruc, actividad, area, tipo};

    listaEnlazada.agregar(nuevaFila);

    actualizarTabla();
            
    JOptionPane.showMessageDialog(this, "¡Datos agregados correctamente!", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    
    txtRuc.setText("");
    txtActividad.setText("");
    txtArea.setText("");
    cmbTipo.setSelectedIndex(0);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void actualizarTabla() {
    // Obtener los datos desde la lista enlazada
    String[][] datos = listaEnlazada.obtenerDatos();

    String[] columnas = {"RUC", "Actividad", "Área", "Tipo de Licencia"};

    // Configurar el modelo de la tabla
    javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(datos, columnas);
    tablaDatos.setModel(model);
}
    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Obtener la fila seleccionada
    int filaSeleccionada = tablaDatos.getSelectedRow();

    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Eliminar el nodo correspondiente en la lista enlazada
    listaEnlazada.eliminarEnPosicion(filaSeleccionada);

    // Actualizar la tabla para reflejar los cambios
    mostrarDatosEnTabla();

    // Exportar los datos actualizados al archivo CSV

    JOptionPane.showMessageDialog(this, "Elemento eliminado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnEliminarActionPerformed

    
    
    private void exportarDatosACSV(String archivoDestino) {
    try (BufferedWriter bw = new BufferedWriter(new FileWriter(archivoDestino))) {
        // Encabezados del archivo CSV
        bw.write("RUC,Actividad,Área,Tipo de Licencia");
        bw.newLine();

        // Recorrer los nodos de la lista enlazada y escribir los datos en el archivo
        Nodo actual = listaEnlazada.getCabeza();
        while (actual != null) {
            String[] fila = actual.getDatos();
            bw.write(String.join(",", fila));
            bw.newLine();
            actual = actual.getSiguiente();
        }
        JOptionPane.showMessageDialog(null, "Datos exportados correctamente al archivo: " + archivoDestino, "Exportación Exitosa", JOptionPane.INFORMATION_MESSAGE);
    } catch (IOException e) {
        JOptionPane.showMessageDialog(null, "Error al exportar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
    
    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed

    String archivoDestino = System.getProperty("user.home") + "/Desktop/LicenciasExport.csv";
    
    exportarDatosACSV(archivoDestino);
    }//GEN-LAST:event_btnExportarActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> new RegistroForm().setVisible(true));
    }
    
    private void limpiarCampos() {
        txtRuc.setText("");
        txtActividad.setText("");
        txtArea.setText("");
        txtTipo.setText("");
        txtRuc.requestFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnImportar;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JTextField txtActividad;
    private javax.swing.JTextField txtArea;
    private javax.swing.JTextField txtRuc;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}


